name: Release

on:
  release:
    types: [ published ]

permissions:
  contents: write
  packages: write

jobs:
  releases-matrix:
    name: Release Go Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [ linux, windows, darwin ]
        goarch: [ "386", amd64, arm64 ]
        exclude:
          - goarch: "386"
            goos: darwin
    steps:
      - name: Get Release Info
        run: |
          {
            echo "RELEASE_TAG=${GITHUB_REF/refs\/tags\//}"
            echo "OS_NAME=${{ matrix.goos }}"
          } >> "$GITHUB_ENV"
      - name: OS darwin
        if: matrix.goos == 'darwin'
        run: echo "OS_NAME=macOS" >> "$GITHUB_ENV"
      - uses: actions/checkout@v4
      - uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: "1.22"
          project_path: "./src"
          binary_name: "nvmc"
          ldflags: -X "nvmc/util.VERSION=${{ env.RELEASE_TAG }}"
          extra_files: LICENSE
          asset_name: 'nvmc-${{ env.RELEASE_TAG }}-${{ env.OS_NAME }}-${{ matrix.goarch }}'
