name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./src
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x

      - name: Verify Dependencies
        run: go mod verify

      - name: Build
        run: go build -v

      - name: Test
        run: go test -v ./...

      - name: Install Node.js
        run: ./nvmc install 22.3.0

      - name: Check Linux Node.js Version
        if: runner.os != 'Windows'
        run: |
          PATH="$HOME/.nvmc/nodejs/bin:$PATH"
          echo "$PATH"
          current_node_version=$(node --version);
          echo "Node Version: ${current_node_version}";
          if [[ $current_node_version != "v22.3.0" ]]; then
            exit 1;
          fi

      - name: Check Windows Node.js Version
        if: runner.os == 'Windows'
        run: |
          $env:Path = "$env:USERPROFILE\.nvmc\nodejs;$env:Path"
          Write-Host "$env:Path"
          $current_node_version = node --version | Out-String
          Write-Host "Node Version: $current_node_version"
          if ($current_node_version.Trim() -ne "v22.3.0") {
            exit 1
          }
